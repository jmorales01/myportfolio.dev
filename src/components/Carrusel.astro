---
const { images, carruselId } = Astro.props;
---

<div 
  id={carruselId} 
  class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-hidden rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50"
>
  <div class="carousel-container relative w-full h-56">
    {
      images.map(({src, alt}, idx) => (
        <img
          alt={alt}
          class={`absolute top-0 left-0 w-full h-full object-cover object-top transition-opacity duration-500 ease-in-out ${idx === 0 ? 'opacity-100' : 'opacity-0'} md:scale-110 md:group-hover:scale-105`}
          loading="lazy"
          src={src}
          data-index={idx}
        />
      ))
    }
  </div>
</div>

<script>
  const PROJECTS = [
    { code: 'gofacturas' },
    { code: 'goventas' },
    { code: 'api' },
    { code: 'arcade' },
  ];

  document.addEventListener('DOMContentLoaded', () => {
    PROJECTS.forEach(project => {
      const carrusel = document.querySelector(`#${project.code}`);
      if (!carrusel) return;

      const images = Array.from(carrusel.querySelectorAll('img'));
      if (images.length === 0) return;

      let currentIndex = 0;
      let intervalId = null;

      function showImage(index) {
        images.forEach((image, idx) => {
          image.style.opacity = idx === index ? '1' : '0';
        });
      }

      function nextImage() {
        const nextIndex = (currentIndex + 1) % images.length;
        
        // Fade out current image
        images[currentIndex].style.opacity = '0';
        
        // Wait for fade out transition
        setTimeout(() => {
          // Fade in next image
          images[nextIndex].style.opacity = '1';
          currentIndex = nextIndex;
        }, 500);
      }

      function startInterval() {
        if (!intervalId && images.length > 1) {
          intervalId = setInterval(nextImage, 2000);
        }
      }

      function stopInterval() {
        if (intervalId) {
          clearInterval(intervalId);
          intervalId = null;
        }
      }

      // Add event listeners only if there's more than one image
      if (images.length > 1) {
        carrusel.addEventListener('mouseenter', startInterval);
        carrusel.addEventListener('mouseleave', () => {
          stopInterval();
        });
      }

      // Cleanup on page leave
      document.addEventListener('visibilitychange', () => {
        if (document.hidden) {
          stopInterval();
        }
      });
    });
  });
</script>