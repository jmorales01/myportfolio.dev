---
import PHPIcon from "./icons/PhpIcon.astro";
import JavaScriptIcon from "./icons/JavaScriptIcon.astro";
import VueJSIcon from "./icons/VueJSIcon.astro";
import LinkButton from "./LinkButton.astro";
import GitHubIcon from "./icons/GitHubIcon.astro";
import LinkIcon from "./icons/LinkIcon.astro";
import TailwindIcon from "./icons/TailwindIcon.astro";
import WordPressIcon from "./icons/WordpressIcon.astro";
import AngularIcon from "./icons/AngularIcon.astro";
import CppIcon from "./icons/CppIcon.astro";
import DockerIcon from "./icons/DockerIcon.astro";
import GoIcon from "./icons/GoIcon.astro";
import GraphQLIcon from "./icons/GraphQLIcon.astro";
import MySQLIcon from "./icons/MySQLIcon.astro";
import UnityIcon from "./icons/UnityIcon.astro";
import NodeIcon from "./icons/NodeIcon.astro";
import ExpressIcon from "./icons/ExpressIcon.astro";
import VuetifyIcon from "./icons/VuetifyIcon.astro";
import Carrusel from "./Carrusel.astro";

var classGlobal =
	"bg-black/5 dark:bg-white/5 border border-white/10 border-gray-300 text-black/70 dark:text-white hover:bg-white/10 hover:scale-105 transition";

const TAGS = {
	PHP: {
		name: "PHP",
		class: classGlobal,
		icon: PHPIcon,
	},
	Vue: {
		name: "Vue",
		class: classGlobal,
		icon: VueJSIcon,
	},
	JavaScript: {
		name: "JavaScript",
		class: classGlobal,
		icon: JavaScriptIcon,
	},
	Tailwind: {
		name: "Tailwind",
		class: classGlobal,
		icon: TailwindIcon,
	},
	WordPress: {
		name: "WordPress",
		class: classGlobal,
		icon: WordPressIcon,
	},
	Angular: {
		name: "Angular",
		class: classGlobal,
		icon: AngularIcon,
	},
	Cpp: {
		name: "C++",
		class: classGlobal,
		icon: CppIcon,
	},
	Docker: {
		name: "Docker",
		class: classGlobal,
		icon: DockerIcon,
	},
	Go: {
		name: "Go",
		class: classGlobal,
		icon: GoIcon,
	},
	GraphQL: {
		name: "GraphQL",
		class: classGlobal,
		icon: GraphQLIcon,
	},
	MySQL: {
		name: "MySQL",
		class: classGlobal,
		icon: MySQLIcon,
	},
	Unity: {
		name: "Unity",
		class: classGlobal,
		icon: UnityIcon,
	},
	Node: {
		name: "Node",
		class: classGlobal,
		icon: NodeIcon,
	},
	Express: {
		name: "Express",
		class: classGlobal,
		icon: ExpressIcon,
	},
    Vuetify: {
        name: "Vuetify",
        class: classGlobal,
        icon: VuetifyIcon,
    },
    TypeScript: {
        name: "TypeScript",
        class: classGlobal,
        icon: NodeIcon,
    }
};

const PROJECTS = [
	{
		code: "gofacturas",
		type: "web",
		title: "Gofacturas CMR",
		description:
			"Sistema de gesti贸n de negocios, emision de facturas electronicas, reportes, inventarios y mucho mas.",
		link: "https://gofacturas.com/",
		github: "https://github.com/Emermv/gofacturas/",
		image: [
			{src:"/projects/gofacturas-1.webp", alt:'Gofacturas CMR'},
			{src:"/projects/gofacturas-2.webp", alt:'Gofacturas CMR'},
			{src:"/projects/gofacturas-3.webp", alt:'Gofacturas CMR'},
		],
		tags: [
			TAGS.PHP,
			TAGS.Vue,
            TAGS.Vuetify,
			TAGS.Docker,
			TAGS.MySQL,
		],
	},
    {
		code: "goventas",
		type: "web",
        title: "Go Ventas",
        description:
            "Sistema de gesti贸n de negocios, emision de facturas electronicas, reportes, inventarios y mucho mas.",
        link: "https://gofacturas.com/",
        github: "https://github.com/Emermv/gofacturas/",
        image: [
			{src:"/projects/goventas-1.webp", alt:'Gofacturas CMR'},
			{src:"/projects/goventas-2.webp", alt:'Gofacturas CMR'},
			{src:"/projects/goventas-3.webp", alt:'Gofacturas CMR'},
		],
        tags: [
            TAGS.Tailwind,
            TAGS.Angular,
            TAGS.TypeScript,
            TAGS.GraphQL,
            TAGS.Go,
            TAGS.Docker,
            TAGS.MySQL,
        ],
    },
	{
		code: "arcade",
		type: "game",
		title: "Juego ARCADE",
		description:
			"Prision Arcana, juego de tipo arcade desarrollado en Unity con el lenguaje C++, echo para escritorio.",
		link: "",
		github: "ttps://github.com/jmorales01/prision_arcana",
		image: [
			{src:"/projects/arcade-1.webp", alt:'Juego ARCADE'},
			{src:"/projects/arcade-2.webp", alt:'Juego ARCADE'},
		],
		tags: [TAGS.Cpp, TAGS.Docker, TAGS.Unity],
	},
	{
		code: "api",
		type: "api",
		title: "API REST con Express",
		description:
			"API REST con Express para una hackathon, endpoints para CRUD de cursos, alumnos, salas etc.",
		link: "",
		github: "https://github.com/jmorales01/hackathon-api",
		image: [
			{src:"../projects/api-1.webp", alt:'API REST con Express'},
			{src:"/projects/api-3.webp", alt:'API REST con Express'},
		],
		tags: [TAGS.JavaScript, TAGS.Docker, TAGS.Node, TAGS.MySQL],
	},
];

const CATEGORIES = [
	{ id: "all", name: "Todos" },
	{ id: "web", name: "Web" },
	{ id: "api", name: "APIs" },
	{ id: "app", name: "Apps" },
	{ id: "game", name: "Juegos" },
];
---

<div class="flex flex-col gap-8">
	<nav class="flex justify-start">
		<ul
			class="flex flex-wrap gap-6"
		>
			{
				CATEGORIES.map(({ id, name }) => (
					<li>
						<button
							class="category-btn px-4 py-0.5 text-sm rounded-md transition-all duration-300 bg-black/10 dark:bg-white/10 hover:bg-gray-200 dark:hover:bg-gray-700"
							data-category={id}
						>
							{name}
						</button>
					</li>
				))
			}
		</ul>
	</nav>

	<div class="flex flex-col gap-y-16">
		{
			PROJECTS.map(
				(
					{ code, type, image, title, description, tags, link, github },
					index
				) => (
					<article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0 project-item transition-all duration-300"
						data-type={type}>
						<div class="w-full md:w-1/2">
							<Carrusel images={image} carruselId={code} />
						</div>

						<div class="w-full md:w-1/2 md:max-w-lg">
							<h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
								{title}
							</h3>
							<div class="flex flex-wrap mt-2">
								<ul class="flex flex-wrap mb-2 gap-x-2 gap-y-1">
									{tags.map((tag) => (
										<li>
											<span
												class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}
											>
												<tag.icon class="size-4" />
												{tag.name}
											</span>
										</li>
									))}
								</ul>

								<div class="mt-2 text-gray-700 dark:text-gray-400">
									{description}
								</div>
								<footer class="flex items-end justify-start mt-4 gap-x-4">
									{github && (
										<LinkButton href={github} target="_blank">
											<GitHubIcon class="size-4" />
											Codigo
										</LinkButton>
									)}
									{link && (
										<LinkButton href={link} target="_blank">
											<LinkIcon class="size-4" />
											web
										</LinkButton>
									)}
								</footer>
							</div>
						</div>
					</article>
				)
			)
		}
	</div>
</div>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const categoryButtons = document.querySelectorAll(".category-btn");
		const projects = document.querySelectorAll(".project-item");

		// Marcar el bot贸n "Todos" como activo por defecto
		const allButton = document.querySelector('[data-category="all"]');
		allButton?.classList.add("bg-gray-200", "dark:bg-gray-700");

		categoryButtons.forEach((button) => {
			button.addEventListener("click", () => {
				// Remover clase activa de todos los botones
				categoryButtons.forEach((btn) => {
					btn.classList.remove("bg-gray-200", "dark:bg-gray-700");
				});

				// Agregar clase activa al bot贸n clickeado
				button.classList.add("bg-gray-200", "dark:bg-gray-700");

				const selectedCategory = button.getAttribute("data-category");

				projects.forEach((project) => {
					const projectType = project.getAttribute("data-type");

					if (selectedCategory === "all" || selectedCategory === projectType) {
						(project as HTMLElement).style.display = "flex";
						(project as HTMLElement).style.opacity = "1";
    					(project as HTMLElement).style.transform = "translateY(0)";
					} else {
						(project as HTMLElement).style.opacity = "0";
    					(project as HTMLElement).style.transform = "translateY(20px)";
						setTimeout(() => {
							(project as HTMLElement).style.display = "none";
						}, 300);
					}
				});
			});
		});
	});
</script>
