---
import LenguageSelector from "./LenguageSelector.astro"
import ThemeToggle from "./ThemeToggle.astro"
import MenuIcon from "./icons/MenuIcon.astro"


const navItems = [
  {
    title: "Experiencia",
    label: "experiencia",
    url: "/#experiencia",
  },
  {
    title: "Proyectos",
    label: "proyectos",
    url: "/#proyectos",
  },
  {
    title: "Sobre m√≠",
    label: "sobre-mi",
    url: "/#sobre-mi",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "mailto:miduga@gmail.com",
  },
]
---

<header
  class="fixed top-0 z-10 flex justify-end items-center w-full mx-auto py-3 backdrop-blur-sm md:justify-center"
>
  <nav
    class="flex px-3 text-sm font-medium text-gray-600 dark:text-gray-200 justify-center items-center"
  >
    {
      navItems.map((link) => (
        <a
          class="hidden md:block relative px-3 py-1 mx-2 transition rounded-full bg-black/10 dark:bg-white/10 hover:text-yellow-500 dark:hover:text-yellow-400"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
	<!-- <LenguageSelector /> -->
    <ThemeToggle />

    <button data-collapse-toggle="navbar-dropdown" type="button"
      class="inline-flex items-center ml-10 p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden bg-black/10 dark:bg-white/10 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
      aria-controls="navbar-dropdown" aria-expanded="false">
      <span class="sr-only">Open main menu</span>
      <MenuIcon />
    </button>
    <div
      id="navbar-menu"
      class="absolute hidden scale-80 top-8 right-0 text-sm p-1 min-w-[8rem] rounded-md border border-gray-100 bg-white/90 dark:bg-gray-900/90 dark:border-gray-500/20 shadow-[0_3px_10px_rgb(0,0,0,0.2)] backdrop-blur-md"
    >
      <ul>
        {
          navItems.map((link) => (
            <li class="navbar-menu-option px-2 py-1.5 cursor-default hover:bg-neutral-400/40 dark:hover:bg-gray-500/50 rounded-sm">
              <a class="rounded-full bg-black/10 dark:bg-white/10 hover:text-yellow-500 dark:hover:text-yellow-400" 
                aria-label={link.label} href={link.url}>
                {link.title}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")
    const navbarMenu = document.querySelectorAll("navbar-menu");

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-yellow-500")
            } else {
              item.classList.remove("text-yellow-500")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>

  header {
	animation: nav-shadown 1s linear both;
	animation-timeline: scroll();
	animation-range: 0 100px;
  }

  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur bg-black/20 dark:bg-white/20 ring-white/10;
    }
  }
</style>